* Initial:

1. Do gate placement (initial placement rows).

2. Place original ffs into placement rows (without overlapping).
   note 1: For the placing ffs, we set displacement constrain as 50%.
   note 2: If existing ffs which can not place legal, put them to Buffer List.
   note 3: Do not debank ffs at this step.
   note 4: If the ff is multi-bit, push it to Stack.

3. For the ffs which are inside the Buffer List. We deal with it after finish Step 2.
   They need to find the remain space to fill in.
   note 1: For the ffs in Buffer List, debank it into sigle bit ff. 
           First, find space to place under 50% displacement constrain (Try all one bit ff type to fit in).
           If still can not find space to place, then lift the constrain and find the minimum displacement space to place.

4. Debank the multi-bit ffs in Stack one by one. Place the single bit ff. 
   note 1: The single bit ff placing constrain is 50% or inside original muti-bit ff's size range.
           If can not meet the constrain, rebank back to multi-bit ff and place it back.

 
# Now all flip flops in DIE are placed legal. And with minimum displacement.

*************************************************************************************************************************************

* Bank and Place:

1. For each flip flops, we construct a Pseudo Block. 
   The Block's is a ractangle and it's outline is determine by the shape of the flip flop's type "+ expand rate %" .
   (This parameter we name it as expand rate, we can use it to control the banking rate).

2. For all Pseudo Blocks, use Sweep Line Method (or INTEGRA) to detect it's neighbor ffs. (If ff's size == MAX_LIB_FF_SIZE we don't include it into X Sequence)
   Every time we find a essential ff in X Sequence, we find its neighbor from related ffs in TraceStack, and construct Y Sequence.
   In the Y Sequence, we find the out all the ffs which it's Pseudo Block overlap with essential ff's Pseudo Block, and get a new cluster.
   --------------------------
   Case 1: cluster size == 1:
        remove this essential ff out of the Sequence and TraceStack.
   Case 2: cluster size > MAX_LIB_FF_SIZE:
        pick out the essential ffs.
        sort the remain cluster members.
        pick new member with size from small to big, until over MAX_LIB_FF_SIZE.
   Case 3: else:
        pick all cluster members.

3. For new cluster, chose the lowest cost ff type. (store other types to List and sort by cost)
   Delete members original ffs from placement rows.
   Compare "cost per bit" with original one, if is smaller. Then try to place it into space under the displacement constrain.
   If fail, try the next ff type in List. Until place success or the cost per bit is larger than original one.

4. Repeat Step 1 ~ 3, until no new ff is generated.


    



